// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Student Server",
    "version": "1.0.0"
  },
  "paths": {
    "/student": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "student"
        ],
        "operationId": "GetStudent",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID to get student information",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns a Student Information",
            "schema": {
              "description": "contains a Student Informations",
              "type": "string"
            }
          }
        }
      },
      "post": {
        "tags": [
          "student"
        ],
        "operationId": "PostStudent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "contains a Student Informations",
            "schema": {
              "description": "contains a Student Informations",
              "type": "string"
            }
          }
        }
      }
    },
    "/studentlist": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "student"
        ],
        "operationId": "GetStudentList",
        "responses": {
          "200": {
            "description": "returns list of Student",
            "schema": {
              "description": "contains list of Student",
              "type": "string"
            }
          }
        }
      }
    },
    "/{id}": {
      "put": {
        "tags": [
          "student"
        ],
        "operationId": "PutStudent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns a Student Informations",
            "schema": {
              "description": "contains a Student Informations",
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "student"
        ],
        "operationId": "DeleteStudent",
        "responses": {
          "204": {
            "description": "Delete a Student Informations",
            "schema": {
              "description": "Delete a Student Informations",
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "required": [
        "name",
        "department",
        "enrollment",
        "age"
      ],
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "department": {
          "type": "string",
          "minLength": 1
        },
        "enrollment": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Student Server",
    "version": "1.0.0"
  },
  "paths": {
    "/student": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "student"
        ],
        "operationId": "GetStudent",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID to get student information",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns a Student Information",
            "schema": {
              "description": "contains a Student Informations",
              "type": "string"
            }
          }
        }
      },
      "post": {
        "tags": [
          "student"
        ],
        "operationId": "PostStudent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "contains a Student Informations",
            "schema": {
              "description": "contains a Student Informations",
              "type": "string"
            }
          }
        }
      }
    },
    "/studentlist": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "student"
        ],
        "operationId": "GetStudentList",
        "responses": {
          "200": {
            "description": "returns list of Student",
            "schema": {
              "description": "contains list of Student",
              "type": "string"
            }
          }
        }
      }
    },
    "/{id}": {
      "put": {
        "tags": [
          "student"
        ],
        "operationId": "PutStudent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns a Student Informations",
            "schema": {
              "description": "contains a Student Informations",
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "student"
        ],
        "operationId": "DeleteStudent",
        "responses": {
          "204": {
            "description": "Delete a Student Informations",
            "schema": {
              "description": "Delete a Student Informations",
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "required": [
        "name",
        "department",
        "enrollment",
        "age"
      ],
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "department": {
          "type": "string",
          "minLength": 1
        },
        "enrollment": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}`))
}
